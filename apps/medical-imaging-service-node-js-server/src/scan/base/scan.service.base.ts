/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Scan as PrismaScan } from "@prisma/client";

export class ScanServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ScanCountArgs, "select">): Promise<number> {
    return this.prisma.scan.count(args);
  }

  async scans(args: Prisma.ScanFindManyArgs): Promise<PrismaScan[]> {
    return this.prisma.scan.findMany(args);
  }
  async scan(args: Prisma.ScanFindUniqueArgs): Promise<PrismaScan | null> {
    return this.prisma.scan.findUnique(args);
  }
  async createScan(args: Prisma.ScanCreateArgs): Promise<PrismaScan> {
    return this.prisma.scan.create(args);
  }
  async updateScan(args: Prisma.ScanUpdateArgs): Promise<PrismaScan> {
    return this.prisma.scan.update(args);
  }
  async deleteScan(args: Prisma.ScanDeleteArgs): Promise<PrismaScan> {
    return this.prisma.scan.delete(args);
  }
}
