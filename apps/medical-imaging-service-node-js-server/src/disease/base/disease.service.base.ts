/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Disease as PrismaDisease } from "@prisma/client";

export class DiseaseServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DiseaseCountArgs, "select">): Promise<number> {
    return this.prisma.disease.count(args);
  }

  async diseases(args: Prisma.DiseaseFindManyArgs): Promise<PrismaDisease[]> {
    return this.prisma.disease.findMany(args);
  }
  async disease(
    args: Prisma.DiseaseFindUniqueArgs
  ): Promise<PrismaDisease | null> {
    return this.prisma.disease.findUnique(args);
  }
  async createDisease(args: Prisma.DiseaseCreateArgs): Promise<PrismaDisease> {
    return this.prisma.disease.create(args);
  }
  async updateDisease(args: Prisma.DiseaseUpdateArgs): Promise<PrismaDisease> {
    return this.prisma.disease.update(args);
  }
  async deleteDisease(args: Prisma.DiseaseDeleteArgs): Promise<PrismaDisease> {
    return this.prisma.disease.delete(args);
  }
}
